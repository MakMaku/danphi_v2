<?xml version="1.0" encoding="UTF-8"?>
<launch>

   <!-- global params-->
    <arg name="model" default="danphi_v2"/>
    <!-- Possible variants
        FIXED_ODOM   
        AMCL
        GMAPPING
    -->
  
    <!-- URDF description -->
    <param name="robot_description" command="$(find xacro)/xacro '$(find danphi_v2_description)/urdf/danphi_v2.xacro'"/>

   <!-- TF stuff -->
        <!-- send fake joint values -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
        <param name="use_gui" value="False"/>
    </node>

        <!-- Combine joint values -->
      <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
    
        <!-- fixed odom -->
    <node pkg="tf" type="static_transform_publisher" name="static_odom_broadcaster" args="0 0 0 0 0 0 map odom 100"/>     
	
	<!-- run pointcloud_to_laserscan node -->
    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
        <remap from="cloud_in" to="/hdl_graph_slam/map_points"/>
		<remap from="scan" to="/map_scan"/>
        <rosparam>
            # target_frame: rslidar # Leave disabled to output scan in pointcloud frame
            transform_tolerance: 0.01
            min_height: 0.25
            max_height: 0.5

            angle_min: -3.1415926 # -M_PI
            angle_max: 3.1415926 # M_PI
            angle_increment: 0.003 # 0.17degree
            scan_time: 0.1
            range_min: 0.2
            range_max: 100
            use_inf: true
            inf_epsilon: 1.0

            # Concurrency level, affects number of pointclouds queued for processing and number of threads used
            # 0 : Detect number of cores
            # 1 : Single threaded
            # 2->inf : Parallelism level
            concurrency_level: 1
        </rosparam>
    </node>
  
    <!-- run gazebo and spawn mybot -->
    <include file="$(find danphi_v2_description)/launch/danphi_v2_world.launch"/>
  
	<!-- move_base -->
	<include file="$(find danphi_v2_description)/launch/move_base.launch">
		<arg name="model" value="$(arg model)" />
		<arg name="move_forward_only" value="false"/>
	</include>
  
     <!-- visualization -->
	<arg name="rviz" default="true"/> 
	<!--node if="$(arg rviz)" pkg="rviz" type="rviz" name="$(anon rviz)" respawn="false" output="screen" args="-d $(find danphi)/src/description/rviz/example.rviz" /-->
    <node name="rviz" pkg="rviz" type="rviz"  respawn="false" output="screen" args="-d $(find danphi_v2_description)/rviz/map_move.rviz" />      
</launch>
